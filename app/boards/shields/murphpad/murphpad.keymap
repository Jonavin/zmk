/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define TIMEOUT 100

/ {
    combos {
        compatible = "zmk,combos";
        combo_btclr {
            timeout-ms = <TIMEOUT>;
            key-positions = <1 25>;
            bindings = <&bt BT_CLR>;
        };
        combo_reset {
            timeout-ms = <TIMEOUT>;
            key-positions = <1 3>;
            bindings = <&reset>;
        };
        combo_bootloader {
            timeout-ms = <TIMEOUT>;
            key-positions = <1 2>;
            bindings = <&bootloader>;
        };
        combo_bt_nxt {
            timeout-ms = <TIMEOUT>;
            key-positions = <1 4>;
            bindings = <&bt BT_NXT>;
        };
    };
	keymap0: keymap {
		compatible = "zmk,keymap";

		default_layer {
            bindings = <
                &none       &kp F1     &kp F2        &kp F3          &kp F4   
                &none       &kp KP_NUM &kp KP_DIVIDE &kp KP_MULTIPLY &kp KP_MINUS    
                &none       &kp KP_N7  &kp KP_N8     &kp KP_N9       &kp KP_PLUS   
                &kp C_MUTE  &kp KP_N4  &kp KP_N5     &kp KP_N6       &none    
                &mo 1       &kp KP_N1  &kp KP_N2     &kp KP_N3       &kp KP_ENTER
                &kp BSPC    &kp KP_N0  &none         &kp KP_DOT      &none
            >;
        };    
        fn_layer {
            bindings = <
                &none       &kp F1     &kp F2        &kp F3          &kp F4   
                &none       &kp KP_NUM &kp KP_DIVIDE &kp KP_MULTIPLY &kp KP_MINUS    
                &none       &kp KP_N7  &kp KP_N8     &kp KP_N9       &ext_power EP_OFF   
                &kp C_MUTE  &kp KP_N4  &kp KP_N5     &kp KP_N6       &none    
                &mo 1       &kp KP_N1  &kp KP_N2     &kp KP_N3       &ext_power EP_OFF
                &kp BSPC    &kp KP_N0  &none         &kp KP_DOT      &none           
            >;  
                
        };
    };
};